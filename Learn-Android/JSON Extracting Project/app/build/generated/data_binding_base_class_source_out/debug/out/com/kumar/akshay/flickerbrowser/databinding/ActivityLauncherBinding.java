// Generated by view binder compiler. Do not edit!
package com.kumar.akshay.flickerbrowser.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.kumar.akshay.flickerbrowser.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLauncherBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SearchView searchV;

  private ActivityLauncherBinding(@NonNull ConstraintLayout rootView, @NonNull SearchView searchV) {
    this.rootView = rootView;
    this.searchV = searchV;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLauncherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLauncherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_launcher, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLauncherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      SearchView searchV = rootView.findViewById(R.id.searchV);
      if (searchV == null) {
        missingId = "searchV";
        break missingId;
      }
      return new ActivityLauncherBinding((ConstraintLayout) rootView, searchV);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
